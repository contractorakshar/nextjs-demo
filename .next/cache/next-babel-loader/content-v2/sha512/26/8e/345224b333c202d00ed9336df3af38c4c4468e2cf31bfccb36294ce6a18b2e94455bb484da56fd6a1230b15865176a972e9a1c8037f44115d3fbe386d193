{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/akshar/react_prjkt/ch23/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId].js\";\nimport Head from \"next/head\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetails from \"../components/meetups/MeetupDetails\";\n\nfunction Meetup(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetails, {\n      img: props.meetupData.image,\n      title: props.meetupData.title,\n      description: props.meetupData.description,\n      address: props.meetupData.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://Akshar21:akshar@2021@cluster0.begp6.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId; //fetch data for a single meetup\n\n  const client = await MongoClient.connect('mongodb+srv://Akshar21:akshar@2021@cluster0.begp6.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default Meetup;","map":{"version":3,"sources":["/home/akshar/react_prjkt/ch23/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId].js"],"names":["Head","MongoClient","ObjectId","MeetupDetails","Meetup","props","meetupData","title","image","description","address","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAqBC,QAArB,QAAqC,SAArC;AACA,OAAOC,aAAP,MAA0B,qCAA1B;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAErB,sBACE;AAAA,4BACA,QAAC,IAAD;AAAA,6BACE;AAAA,kBACGA,KAAK,CAACC,UAAN,CAAiBC;AADpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,eAMA,QAAC,aAAD;AACE,MAAA,GAAG,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KADxB;AAEE,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBC,KAF1B;AAGE,MAAA,WAAW,EAAEF,KAAK,CAACC,UAAN,CAAiBG,WAHhC;AAIE,MAAA,OAAO,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ5B;AAAA;AAAA;AAAA;AAAA,YANA;AAAA,kBADF;AAeD;;AACD,OAAO,eAAeC,cAAf,GAA+B;AACpC,QAAMC,MAAM,GAAC,MAAMX,WAAW,CAACY,OAAZ,CAAoB,mGAApB,CAAnB;AACA,QAAMC,EAAE,GAACF,MAAM,CAACE,EAAP,EAAT;AAEA,QAAMC,iBAAiB,GAACD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAxB;AACA,QAAMC,OAAO,GAAC,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA1B,EAAmCC,OAAnC,EAApB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAC,KADJ;AAELC,IAAAA,KAAK,EAACN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAG;AAACC,MAAAA,MAAM,EAAC;AAACC,QAAAA,QAAQ,EAACF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAV;AAAR,KAAH,CAAlB;AAFD,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AAC3C,QAAMH,QAAQ,GAACG,OAAO,CAACJ,MAAR,CAAeC,QAA9B,CAD2C,CAG7C;;AACA,QAAMf,MAAM,GAAC,MAAMX,WAAW,CAACY,OAAZ,CAAoB,mGAApB,CAAnB;AACE,QAAMC,EAAE,GAACF,MAAM,CAACE,EAAP,EAAT;AAEA,QAAMC,iBAAiB,GAACD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAxB;AACA,QAAMe,cAAc,GAAC,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAACb,IAAAA,GAAG,EAACjB,QAAQ,CAAEyB,QAAF;AAAb,GAA1B,CAA3B;AACAf,EAAAA,MAAM,CAACS,KAAP;AACA,SAAM;AACJhB,IAAAA,KAAK,EAAC;AACJC,MAAAA,UAAU,EAAC;AACT2B,QAAAA,EAAE,EAACF,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADM;AAETrB,QAAAA,KAAK,EAACwB,cAAc,CAACxB,KAFZ;AAGTG,QAAAA,OAAO,EAACqB,cAAc,CAACrB,OAHd;AAITF,QAAAA,KAAK,EAACuB,cAAc,CAACvB,KAJZ;AAKTC,QAAAA,WAAW,EAACsB,cAAc,CAACtB;AALlB;AADP;AADF,GAAN;AAWD;AAED,eAAeL,MAAf","sourcesContent":["import Head from \"next/head\" \nimport { MongoClient,ObjectId } from \"mongodb\";\nimport MeetupDetails from \"../components/meetups/MeetupDetails\";\n\nfunction Meetup(props) {\n  \n  return (\n    <>\n    <Head>\n      <title>\n        {props.meetupData.title}\n      </title>\n    </Head>\n    <MeetupDetails\n      img={props.meetupData.image}\n      title={props.meetupData.title}\n      description={props.meetupData.description}\n      address={props.meetupData.address}\n    />\n    </>\n  );\n}\nexport async function getStaticPaths(){\n  const client=await MongoClient.connect('mongodb+srv://Akshar21:akshar@2021@cluster0.begp6.mongodb.net/meetups?retryWrites=true&w=majority')\n  const db=client.db();\n    \n  const meetupsCollection=db.collection('meetups');\n  const meetups=await meetupsCollection.find({},{_id:1}).toArray();\n  client.close();\n  return {\n    fallback:false,\n    paths:meetups.map(meetup=>({params:{meetupId:meetup._id.toString()},\n  })),\n\n  };\n}\n\nexport async function getStaticProps(context){\n  const meetupId=context.params.meetupId;\n  \n//fetch data for a single meetup\nconst client=await MongoClient.connect('mongodb+srv://Akshar21:akshar@2021@cluster0.begp6.mongodb.net/meetups?retryWrites=true&w=majority')\n  const db=client.db();\n    \n  const meetupsCollection=db.collection('meetups');\n  const selectedMeetup=await meetupsCollection.findOne({_id:ObjectId( meetupId)});\n  client.close();\n  return{\n    props:{\n      meetupData:{\n        id:selectedMeetup._id.toString(),\n        title:selectedMeetup.title,\n        address:selectedMeetup.address,\n        image:selectedMeetup.image,\n        description:selectedMeetup.description\n      }\n  }\n  }\n}\n\nexport default Meetup;\n"]},"metadata":{},"sourceType":"module"}