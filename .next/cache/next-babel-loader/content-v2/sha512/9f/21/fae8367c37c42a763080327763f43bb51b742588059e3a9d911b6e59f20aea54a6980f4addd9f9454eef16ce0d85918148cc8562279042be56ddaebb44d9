{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/akshar/react_prjkt/ch23/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId].js\";\nimport { ObjectId } from \"mongodb\";\nimport MeetupDetails from \"../components/meetups/MeetupDetails\";\n\nfunction Meetup(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails // img={props.meetupData.image}\n  , {\n    title: props.meetupData.title,\n    description: props.meetupData.description,\n    address: props.meetupData.address\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Meetup;\nexport var __N_SSG = true;\nexport default Meetup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meetup\");","map":{"version":3,"sources":["/home/akshar/react_prjkt/ch23/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId].js"],"names":["ObjectId","MeetupDetails","Meetup","props","meetupData","title","description","address"],"mappings":";;AAAA,SAAqBA,QAArB,QAAqC,SAArC;AACA,OAAOC,aAAP,MAA0B,qCAA1B;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAErB,sBACE,QAAC,aAAD,CACE;AADF;AAEE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAF1B;AAGE,IAAA,WAAW,EAAEF,KAAK,CAACC,UAAN,CAAiBE,WAHhC;AAIE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG;AAJ5B;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KAVQL,M;;AA2CT,eAAeA,MAAf","sourcesContent":["import { MongoClient,ObjectId } from \"mongodb\";\nimport MeetupDetails from \"../components/meetups/MeetupDetails\";\n\nfunction Meetup(props) {\n  \n  return (\n    <MeetupDetails\n      // img={props.meetupData.image}\n      title={props.meetupData.title}\n      description={props.meetupData.description}\n      address={props.meetupData.address}\n    />\n  );\n}\nexport async function getStaticPaths(){\n  const client=await MongoClient.connect('mongodb+srv://Akshar21:akshar@2021@cluster0.begp6.mongodb.net/meetups?retryWrites=true&w=majority')\n  const db=client.db();\n    \n  const meetupsCollection=db.collection('meetups');\n  const meetups=await meetupsCollection.find({},{_id:1}).toArray();\n  client.close();\n  return {\n    fallback:false,\n    paths:meetups.map(meetup=>({params:{meetupId:meetup._id.toString()},\n  })),\n\n  };\n}\n\nexport async function getStaticProps(context){\n  const meetupId=context.params.meetupId;\n  \n//fetch data for a single meetup\nconst client=await MongoClient.connect('mongodb+srv://Akshar21:akshar@2021@cluster0.begp6.mongodb.net/meetups?retryWrites=true&w=majority')\n  const db=client.db();\n    \n  const meetupsCollection=db.collection('meetups');\n  const selectedMeetup=await meetupsCollection.findOne({_id:meetupId});\n  client.close();\n  return{\n    props:{\n      meetupData:selectedMeetup\n    }\n  }\n}\n\nexport default Meetup;\n"]},"metadata":{},"sourceType":"module"}